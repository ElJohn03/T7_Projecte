drop table album cascade constraints;
drop table album_contingut cascade constraints;
drop table art_grup cascade constraints;
drop table art_ind cascade constraints;
drop table artista cascade constraints;
drop table autoria cascade constraints;
drop table canso cascade constraints;
drop table cataleg cascade constraints;
drop table client cascade constraints;
drop table estil cascade constraints;
drop table h_grup cascade constraints;
drop table llista cascade constraints;
drop table llista_contingut cascade constraints;
drop table pais cascade constraints;
drop table reproduccio cascade constraints;

CREATE TABLE PAIS 
(
	PAIS_ISO varchar2(3) constraint PK_PAIS primary key,
	PAIS_NOM varchar2(60) constraint UN_PAIS_NOM unique
);

CREATE TABLE ESTIL
(
	ESTIL_ID number(3) generated by default on null as identity constraint PK_ESTIL primary key,
	ESTIL_NOM varchar2(20) constraint UN_ESTIL_NOM unique
);

CREATE TABLE ARTISTA
(
	ARTISTA_ID number(3) generated by default on null as identity constraint PK_ARTISTA PRIMARY KEY,
	ARTISTA_NOM varchar2(40) constraint UN_ARTISTA_NOM unique,
	ARTISTA_TIPUS char constraint CK_ARTISTA_TIPUS CHECK (ARTISTA_TIPUS = 'I' OR ARTISTA_TIPUS = 'G')
);

CREATE TABLE ART_GRUP
(
	ART_GRUP_ID number(3) constraint PK_ART_GRUP primary key,
	ART_GRUP_DATACREACIO date, --Trigger per controlar que ART_GRUP_DATACREACIO no es mes gran que la data actual
    constraint FK_ART_GRUP_ID foreign key (art_grup_id) references ARTISTA (ARTISTA_ID)																	
);

CREATE TABLE ART_IND
(
	ART_IND_ID number(3) constraint PK_ART_IND primary key,
	ART_IND_DATANAIX date, --Trigger per controlar que ART_IND_DATANAIX no es mes gran que la data actual
	ART_IND_NACIONALITAT varchar2(3), 
	constraint FK_ART_IND_NACIONALITAT foreign key (art_ind_nacionalitat) references PAIS (PAIS_ISO),
	constraint FK_ART_IND_ID foreign key (art_ind_id) references ARTISTA (ARTISTA_ID)
);

CREATE TABLE H_GRUP 
(
	H_GRUP_ID_ARTGRUP number(3),
	H_GRUP_ID_ARTIND number(3),
	H_GRUP_DATAINICI date, --Trigger per controlar que H_GRUP_DATAINICI no es mes gran que la data actual
	H_GRUP_DATAFINAL date null,
	PRIMARY KEY (H_GRUP_ID_ARTGRUP, H_GRUP_ID_ARTIND, H_GRUP_DATAINICI),
	constraint CK_H_GRUP_DATES CHECK (H_GRUP_DATAFINAL > H_GRUP_DATAINICI),
	constraint FK_H_GRUP_ID_ARTGRUP foreign key (h_grup_id_artgrup) references ART_GRUP (art_grup_id)
);

CREATE TABLE CATALEG
(
	CATALEG_ID number(3) generated by default on null as identity constraint PK_CATALEG PRIMARY KEY,
	CATALEG_TITOL varchar2(40),
	CATALEG_ACTIU char(1),
	CATALEG_ESTIL number(3),
	CATALEG_TIPUS char,
	constraint FK_CATALEG_ESTIL foreign key (CATALEG_ESTIL) references ESTIL (ESTIL_ID),
	constraint CK_CATALEG_TIPUS CHECK (CATALEG_TIPUS = 'C' OR CATALEG_TIPUS = 'A' OR CATALEG_TIPUS = 'L')
);

CREATE TABLE CANSO
(
	CANSO_ID number(3) constraint PK_CANSO primary key,
	CANSO_ANYCREACIO date, --Trigger per controlar que CANSO_ANYCREACIO no es mes gran que la data actual
	CANSO_DURADA number(5),
	CANSO_INTERPRET number(3),
	constraint FK_CANSO_ID foreign key (CANSO_ID) references CATALEG (CATALEG_ID),
  constraint CK_CANSO_DURADA CHECK (CANSO_DURADA > 0),
	constraint FK_CANSO_INTERPRET foreign key (CANSO_INTERPRET) references ARTISTA (ARTISTA_ID)
);

CREATE TABLE AUTORIA
(
	AUTORIA_ID_CANSO number(3),
	AUTORIA_ID_ARTIND number(3),
	PRIMARY KEY (AUTORIA_ID_CANSO, AUTORIA_ID_ARTIND),
	constraint FK_AUTORIA_ID_CANSO foreign key (AUTORIA_ID_CANSO) references CANSO (CANSO_ID),
	constraint FK_AUTORIA_ID_ARTIND foreign key (AUTORIA_ID_ARTIND) references ART_IND (ART_IND_ID)
);

CREATE TABLE ALBUM 
(
	ALBUM_ID number(3) constraint PK_ALBUM_ID primary key,
	ALBUM_DURADA number(5),
	ALBUM_ANYCREACIO date, --Trigger per controlar que ALBUM_ANYCREACIO no es mes gran que la data actual
	constraint FK_ALBUM_ID foreign key (ALBUM_ID) references CATALEG (CATALEG_ID),
  constraint CK_ALBUM_DURADA CHECK (ALBUM_DURADA >= 0)
);

CREATE TABLE ALBUM_CONTINGUT
(
	ALBUM_CONTINGUT_ID_ALBUM number(3),
	ALBUM_CONTINGUT_ID_CANSO number(3),
	ALBUM_CONTINGUT_POS number(4),
  PRIMARY KEY (ALBUM_CONTINGUT_ID_ALBUM, ALBUM_CONTINGUT_ID_CANSO),
  UNIQUE (ALBUM_CONTINGUT_ID_ALBUM, ALBUM_CONTINGUT_POS),
	constraint FK_ALBUM_CONTINGUT_ID_ALBUM foreign key (ALBUM_CONTINGUT_ID_ALBUM) references ALBUM (ALBUM_ID),
	constraint FK_ALBUM_CONTINGUT_ID_CANSO foreign key (ALBUM_CONTINGUT_ID_CANSO) references CANSO (CANSO_ID),
	constraint CK_ALBUM_CONTINGUT_POS CHECK (ALBUM_CONTINGUT_POS > 0)
);

CREATE TABLE LLISTA 
(
	LLISTA_ID number(3) constraint PK_LLISTA primary key,
	LLISTA_DURADA number(5),
	constraint FK_LLISTA_ID foreign key (LLISTA_ID) references CATALEG (CATALEG_ID),
  constraint CK_LLISTA_DURADA CHECK (LLISTA_DURADA >= 0)
);

CREATE TABLE LLISTA_CONTINGUT 
(
	LLISTA_CONTINGUT_ID_LLISTA number(3),
	LLISTA_CONTINGUT_ID_CATALEG number(3),
	LLISTA_CONTINGUT_POS number(4),
	PRIMARY KEY (LLISTA_CONTINGUT_ID_CATALEG, LLISTA_CONTINGUT_ID_LLISTA),
	constraint FK_LLISTA_CONTINGUT_ID_LLISTA foreign key (LLISTA_CONTINGUT_ID_LLISTA) references LLISTA (LLISTA_ID),
	constraint FK_LLISTA_CONTINGUT_ID_CATALEG foreign key (LLISTA_CONTINGUT_ID_CATALEG) references CATALEG (CATALEG_ID)
);

CREATE TABLE CLIENT
(
	CLIENT_ID number(3) generated by default on null as identity constraint PK_CLIENT PRIMARY KEY,
	CLIENT_EMAIL varchar2(50) constraint UN_CLIENT_EMAIL unique,
	CLIENT_NOM varchar2(30),
	CLIENT_COGNOMS varchar2(40),
	CLIENT_DATANAIX date,
	CLIENT_CPOSTAL number(5),
	CLIENT_DOMICILI1 varchar2(50),
	CLIENT_DOMICILI2 varchar2(50) null,
	CLIENT_POBLACIO varchar2(50),
	CLIENT_PAIS varchar2(3),
	constraint FK_CLIENT_PAIS foreign key (CLIENT_PAIS) references PAIS (PAIS_ISO)
);

CREATE TABLE REPRODUCCIO
(
	REPRODUCCIO_ID_CLIENT number(3),
	REPRODUCCIO_MOMENT_TEMPORAL date,
	REPRODUCCIO_ID_CATALEG number(3),
	PRIMARY KEY (REPRODUCCIO_ID_CLIENT, REPRODUCCIO_MOMENT_TEMPORAL),
	constraint FK_REPRODUCCIO_ID_CLIENT foreign key (REPRODUCCIO_ID_CLIENT) references CLIENT (CLIENT_ID),
	constraint FK_REPRODUCCIO_ID_CATALEG foreign key (REPRODUCCIO_ID_CATALEG) references CATALEG (CATALEG_ID)
);



/*
id integer GENERATED ALWAYS AS IDENTITY primary key
id integer GENERATED BY DEFAULT AS IDENTITY primary key
*/

